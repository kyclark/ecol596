plot(life ~ fluid, data=dat)
boxplot(life ~ fluid, data=dat, ylab = "Life", xlab = "Fluid")
lmod = lm(life ~ fluid, data=dat)
plot(residuals(lmod), main="Residuals life ~ fluid")
plot(lmod)
dat.dir = "~/work/ecol596w/project/data"
setwd(dat.dir)
dat = read.delim("Ac2.fa", sep=" ", header=F)
colnames(dat) = c("kmer", "count")
dat
head(dat)
h = hist(dat$kmer * dat$count)
str(h)
bit = head(dat)
bit
bit$kmer * bit$count
15 * 10129
?rep
?tapply
bit$total = 0
bit
require(stats)
groups <- as.factor(rbinom(32, n = 5, prob = 0.4))
groups
tapply(groups, groups, length)
table(groups)
tapply(bit, c("kmer", "count"), function (k,c) rep(k, c))
all = []
all
dat.long = ()
dat.long = []
dat.long = numeric(0)
dat.long
bit = head(dat)
bit
?rep
for (r in bit) {
append(dat.long, rep(r$kmer, r$count))
}
for (r in bit) {
print paste("kmer = ", r$kmer)
append(dat.long, rep(r$kmer, r$count))
}
for (r in bit) {
print paste("kmer = ", r$kmer)
#append(dat.long, rep(r$kmer, r$count))
}
print(paste("kmer = ", r$kmer))
for (r in bit) {
print(paste("kmer = ", r$kmer))
#append(dat.long, rep(r$kmer, r$count))
}
bit = head(dat)
for (r in bit) {
print(r)
#print(paste("kmer = ", r$kmer))
#append(dat.long, rep(r$kmer, r$count))
}
for (i in 1:nrow(bit)) {
r = bit[i]
print(r)
#print(paste("kmer = ", r$kmer))
#append(dat.long, rep(r$kmer, r$count))
}
for (i in 1:nrow(bit)) {
kmer = bit$kmer[i]
count = bit$count[i]
print(paste("kmer = ", kmer))
print(paste("count = ", count))
#append(dat.long, rep(r$kmer, r$count))
}
dat.long = numeric(0)
bit = head(dat)
for (i in 1:nrow(bit)) {
kmer = bit$kmer[i]
count = bit$count[i]
print(paste("kmer = ", kmer))
print(paste("count = ", count))
append(dat.long, rep(kmer, count))
}
dat.long
?append
dat.long
dat.long = vector()
bit = head(dat)
for (i in 1:nrow(bit)) {
kmer = bit$kmer[i]
count = bit$count[i]
print(paste("kmer = ", kmer))
print(paste("count = ", count))
append(dat.long, rep(kmer, count))
}
dat.long
append(dat.long, "foo")
dat.long
dat.long = vector
append(dat.long, "foo")
dat.long
dat.long = numeric()
bit = head(dat)
for (i in 1:nrow(bit)) {
kmer = bit$kmer[i]
count = bit$count[i]
print(paste("kmer = ", kmer))
print(paste("count = ", count))
dat.long = append(dat.long, rep(kmer, count))
}
dat.long
dat.long = numeric()
bit = head(dat)
for (i in 1:nrow(bit)) {
kmer = bit$kmer[i]
count = bit$count[i]
print(paste("kmer = ", kmer))
print(paste("count = ", count))
dat.long = append(dat.long, rep(kmer, count))
}
h = hist(dat.long)
s
h
h[['density']]
h[['intensities']]
dat.long = numeric()
for (i in 1:nrow(bit)) {
kmer = dat$kmer[i]
count = dat$count[i]
dat.long = append(dat.long, rep(kmer, count))
}
h = hist(dat.long)
h
plot(h)
dat
head(dat)
dat = read.delim("Ac2.fa", sep=" ", header=F)
colnames(dat) = c("freq", "count")
plot(dat, type="l", main="Ac2")
dat.long = numeric()
for (i in 1:nrow(bit)) {
freq = dat$freq[i]
count = dat$count[i]
dat.long = append(dat.long, rep(freq, count))
}
h = hist(dat.long)
hist(dat.long)
tail(dat.long)
dat.long = numeric()
for (i in 1:nrow(dat)) {
freq = dat$freq[i]
count = dat$count[i]
dat.long = append(dat.long, rep(freq, count))
}
hist(dat.long)
h = hist(dat.long)
h = hist(dat.long, plot=F)
peakx <- x[which(diff(sign(diff(dat.long)))==-2)]
head(dat.long)
peakx <- which(diff(sign(diff(dat.long)))==-2)
head peakx
head(peakx)
diff(sign(diff(dat.long)))
h[["intensities"]]
h = hist(dat.long, plot=F)
h[["intensities"]]
str(h)
h$density
plot(h$density)
plot(h$density, type="l")
max(h$counts)
findpeaks <- function(vec,bw=1,x.coo=c(1:length(vec)))
{
pos.x.max <- NULL
pos.y.max <- NULL
pos.x.min <- NULL
pos.y.min <- NULL 	for(i in 1:(length(vec)-1)) 	{ 		if((i+1+bw)>length(vec)){
sup.stop <- length(vec)}else{sup.stop <- i+1+bw
}
if((i-bw)<1){inf.stop <- 1}else{inf.stop <- i-bw}
subset.sup <- vec[(i+1):sup.stop]
subset.inf <- vec[inf.stop:(i-1)]
is.max   <- sum(subset.inf > vec[i]) == 0
is.nomin <- sum(subset.sup > vec[i]) == 0
no.max   <- sum(subset.inf > vec[i]) == length(subset.inf)
no.nomin <- sum(subset.sup > vec[i]) == length(subset.sup)
if(is.max & is.nomin){
pos.x.max <- c(pos.x.max,x.coo[i])
pos.y.max <- c(pos.y.max,vec[i])
}
if(no.max & no.nomin){
pos.x.min <- c(pos.x.min,x.coo[i])
pos.y.min <- c(pos.y.min,vec[i])
}
}
return(list(pos.x.max,pos.y.max,pos.x.min,pos.y.min))
}
dat = read.delim("Ac2.fa", sep=" ", header=F)
colnames(dat) = c("freq", "count")
plot(dat, type="l", main="Ac2")
hist(dat.long)
hist(dat.long, type="l")
hist(dat.long, type="l")
head(dat.long)
dat.long = numeric()
for (i in 1:nrow(dat)) {
freq = dat$freq[i]
count = dat$count[i]
dat.long = append(dat.long, rep(freq, count))
}
hist(dat.long, type="l")
?hist
plot(table(dat.long))
plot(h$counts)
plot(h$counts, type="l"
plot(h$counts, type="l")
plot(h$counts, type="l")
plot(table(dat.long))
head(table(dat.long))
?hist
hist(dat.long, freq=T)
length(dat.long)
?seq
seq(1, length(dat.long), 10)
seq(1, length(dat.long), 10)
hist(dat.long, seq(1, length(dat.long), 10))
hist(dat.long, breaks=seq(1, length(dat.long), 10))
dat.long[1]
dat.long[1]
dat.long[length(dat.long)]
hist(dat.long, breaks=seq(dat.long[1], dat.long(length(dat.long)), 10))
seq(dat.long[1], dat.long(length(dat.long)), 10)
seq(dat.long[1], dat.long(length(dat.long)), 10)
hist(dat.long, breaks=seq(dat.long[1], dat.long[length(dat.long)], 10))
hist(dat.long, breaks=seq(dat.long[1], dat.long[length(dat.long)], 10))
dat.long[length(dat.long)]
seq(dat.long[1], dat.long[length(dat.long)], 10)
?hist
hist(dat.long, breaks=seq(dat.long[1], dat.long[length(dat.long)], 10))
table(dat.long)
seq(dat.long[1], dat.long[length(dat.long)], 10)
dat.long[length(dat.long)]
?seq
hist(dat.long, breaks=seq(dat.long[1], dat.long[length(dat.long)], 5))
plot(h$counts, type="l")
dat = read.delim("Ac2.fa", sep=" ", header=F)
colnames(dat) = c("freq", "count")
plot(dat, type="l", main="Ac2")
plot(h$counts, type="l", main="Ac2")
diff(c(1, 5, 3))
str(h)
diff(h$counts)
h$coujt
h$counts
h$breaks
length(h$breaks)
length(h$counts)
length(diff(h$counts))
h = hist(dat.long, plot=F, breaks=seq(dat.long[1], dat.long[length(dat.long)], 5))
length(h$breaks)
length(h$counts)
h$breaks
hist(dat.long, breaks=5)
hist(dat.long, breaks="sturges")
h$breaks
length(dat.long)
?hist
dat.dir = "~/work/ecol596w/project/data"
setwd(dat.dir)
for (fname in list.files(dat.dir, pattern="*.fa$")) {
print(fname)
dat = read.delim(file.path(dat.dir, fname), sep=" ", header=F)
colnames(dat) = c("freq", "count")
dat.long = numeric()
for (i in 1:nrow(dat)) {
freq = dat$freq[i]
count = dat$count[i]
dat.long = append(dat.long, rep(freq, count))
}
png(filename = paste0(fname, '.png'))
h = hist(dat.long, breaks=seq(dat.long[1], dat.long[length(dat.long)], 5), plot=F)
plot(h$counts, type="l", main=fname)
#plot(dat, type="l", main=fname)
dev.off()
}
dat = read.delim("Ra2.fa", sep=" ", header=F)
colnames(dat) = c("freq", "count")
plot(dat, type="l", main="Ac2")
file = "Ra2.fa"
dat = read.delim(file, sep=" ", header=F)
colnames(dat) = c("freq", "count")
plot(dat, type="l", main=file)
dat
plot(dat, type="l", main=file)
file = "Ra2.fa"
dat = read.delim(file, sep=" ", header=F)
colnames(dat) = c("freq", "count")
plot(dat, type="l", main=file)
dat.long = numeric()
for (i in 1:nrow(dat)) {
freq = dat$freq[i]
count = dat$count[i]
dat.long = append(dat.long, rep(freq, count))
}
plot(table(dat.long))
hist(dat.long, breaks=seq(dat.long[1], dat.long[length(dat.long)], 5))
seq(dat.long[1], dat.long[length(dat.long)], 5)
tail(dat)
dat.dir = "~/work/ecol596w/project/data"
setwd(dat.dir)
for (fname in list.files(dat.dir, pattern="*.fa$")) {
print(fname)
dat = read.delim(file.path(dat.dir, fname), sep=" ", header=F)
colnames(dat) = c("freq", "count")
dat.long = numeric()
for (i in 1:nrow(dat)) {
freq = dat$freq[i]
count = dat$count[i]
dat.long = append(dat.long, rep(freq, count))
}
png(filename = paste0(fname, '.png'))
h = hist(dat.long, plot=F) #, breaks=seq(dat.long[1], dat.long[length(dat.long)], 5))
plot(h$counts, type="l", main=fname)
#plot(dat, type="l", main=fname)
dev.off()
}
file = "Ra2.fa"
dat = read.delim(file, sep=" ", header=F)
colnames(dat) = c("freq", "count")
plot(dat, type="l", main=file)
hist(dat)
hist(dat, breaks=5)
head(dat)
hist(dat)
hist(dat$count)
plot(dat, type="l", main=file)
file = "Ra2.fa"
dat = read.delim(file, sep=" ", header=F)
colnames(dat) = c("freq", "count")
plot(dat, type="l", main=file)
dat.long = numeric()
for (i in 1:nrow(dat)) {
freq = dat$freq[i]
count = dat$count[i]
dat.long = append(dat.long, rep(freq, count))
}
plot(table(dat.long))
hist(dat.long, breaks=seq(dat.long[1], dat.long[length(dat.long)], 5))
h = hist(dat.long, plot=F)
plot(h$counts, type="l", main="Ac2")
str(h)
diff(h$counts)
which(sign(diff(h$counts)))
sign(diff(h$counts))
diff(sign(diff(h$counts)))
?range
range(dat$freq)
class(range(dat$freq))
range(dat$freq)[1]
range(dat$freq)[2]
range(1)
range(0)
range("foo")
range(c("boo", "far"))
range(c("foo", "far"))
range(c("foo", "bar"))
?maxima
sign(diff(h$counts))
length(sign(diff(h$counts)))
?cumsum
cumsum(dat$counts)
cumsum(h$counts)
h$counts
findpeaks <- function(vec,bw=1,x.coo=c(1:length(vec)))
{
pos.x.max <- NULL
pos.y.max <- NULL
pos.x.min <- NULL
pos.y.min <- NULL
for(i in 1:(length(vec)-1)) 	{
if((i+1+bw)>length(vec)){
sup.stop <- length(vec)}
else{
sup.stop <- i+1+bw
}
if((i-bw)<1){inf.stop <- 1}else{inf.stop <- i-bw}
subset.sup <- vec[(i+1):sup.stop]
subset.inf <- vec[inf.stop:(i-1)]
is.max   <- sum(subset.inf > vec[i]) == 0
is.nomin <- sum(subset.sup > vec[i]) == 0
no.max   <- sum(subset.inf > vec[i]) == length(subset.inf)
no.nomin <- sum(subset.sup > vec[i]) == length(subset.sup)
if(is.max & is.nomin){
pos.x.max <- c(pos.x.max,x.coo[i])
pos.y.max <- c(pos.y.max,vec[i])
}
if(no.max & no.nomin){
pos.x.min <- c(pos.x.min,x.coo[i])
pos.y.min <- c(pos.y.min,vec[i])
}
}
return(list(pos.x.max,pos.y.max,pos.x.min,pos.y.min))
}
findpeaks(h$counts)
h$counts
dat
head(dat)
plot(dat)
head(dat.long)
findpeaks(dat.long)
dat = read.csv("~/work/stat571/r/table-4.3.dat")
dat
r = c(t(as.matrix(dat)))
r
str(dat)
summary(dat)
class(dat)
?"data.frame"
colnames(dat)
f = colnames(dat)
a = length(f)
a
n = nrow(dat)
n
tm = gl(k, 1, n*k, factor(f))   # matching treatment
k = length(f) # number of treatment levels
n = nrow(dat) # number of control blocks
tm = gl(k, 1, n*k, factor(f))   # matching treatment
tm
?gl
blk = gl(n, k, k*n)             # blocking factor
blk
av = aov(r ~ tm + blk)
summary(av)
av = aov(r ~ tm + blk)
summary(av)     # blocking factor
qf(.95, df1=3, df2=5)
install.packages("quantmod")
library(quantmod)
findPeaks(h$counts)
h$counts
plot(h$counts)
?findPeaks
findValleys(h$counts)
findValleys(h$counts, thresh = 1)
findPeaks(sin(seq(1,10,.1)))
sin(seq(1,10,.1))
plot(sin(seq(1,10,.1)))
plot(h$counts)
?plot
plot(h$counts)
findValleys(h$counts)
h$counts[5]
h$counts[h$counts < 4513]
pk = function (x, thresh = 0)
{
pks <- which(diff(sign(diff(x, na.pad = FALSE)), na.pad = FALSE) < 0) + 2
if (!missing(thresh)) {
pks[x[pks - 1] - x[pks] > thresh]
}
else pks
}
h$counts[h$counts < 4513]
pk(h$counts)
find_peaks <- function (x, m = 3){
shape <- diff(sign(diff(x, na.pad = FALSE)))
pks <- sapply(which(shape < 0), FUN = function(i){
z <- i - m + 1
z <- ifelse(z > 0, z, 1)
w <- i + m + 1
w <- ifelse(w < length(x), w, length(x))
if(all(x[c(z : i, (i + 2) : w)] <= x[i + 1])) return(i + 1) else return(numeric(0))
})
pks <- unlist(pks)
pks
}
find_peaks(h$counts)
find_peaks(h$counts[8:])
find_peaks(h$counts[8:length(h$counts)])
h$counts[8:length(h$counts)]
h$counts[8]
h$counts
source('~/work/stat571/r/m4.3.R', echo=TRUE)
r
f
dat
n
tm
blk
summary(av)
fq(.95, df1=1, df2=15)
qf(.95, df1=1, df2=15)
qf(.95, df1=3, df2=15)
qf(.95, df1=5, df2=15)
TukeyHSD(r)
?TukeyHSD
TukeyHSD(av)
TukeyHSD(av, "tm")
TukeyHSD(av, "tm", ordered = T)
plot(TukeyHSD(av, "tm", ordered = T))
??fisher.test
LSD(av)
library(agricolae)
LSD(av)
LSD.test(av)
av
LSD.test(av, "tm")
LSD.test(av, tm)
out = LSD.test(av, "tm")
summary(out)
bar.group(out$groups,ylim=c(0,45),density=4,border="blue")
?LSD.test
out = LSD.test(av, "tm", 15)
summary(out)
av
